/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        int size = getSize(head);
        if(size<2 || n==size) return head.next;
        int count = 1;
        ListNode temp = head;
        ListNode prev = head;
        while(count!=(size-n+1)){
            prev = temp;
            temp = temp.next;
            count++;
        }
        prev.next = temp.next;
        return head;
    }
    int getSize(ListNode head){
        ListNode fast = head;
        int size = 0;
        while(fast!=null && fast.next!=null){
            fast = fast.next.next;
            size+=2;
        }
        if(fast!=null) size++;
        return size;
    }
}
